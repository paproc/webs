name: tests

on: [push, pull_request]

jobs:
  latte:
    name: Latte with PHP ${{ matrix.php }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ./.github/setup
        with:
          php-version: ${{ matrix.php }}

      - run: composer run-script latteLint
        name: Test

  build:
    name: build assets (npm ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: ./.github/setup
        with:
          node: true
          node-version: ${{ matrix.node-version }}
          python: true

      - run: npm run build
        env:
          CI: true

  nette:
    name: PHP (Nette Tester) ${{ matrix.php }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1", "8.2", "8.3"]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: recursive
      - uses: ./.github/setup
        with:
          php-version: ${{ matrix.php }}
          node: true
      - uses: actions/setup-python@v4
        name: Setup Python
        with:
          python-version: "3.11"
          cache: "pip"
      - run: pip install -r tests/api/requirements.txt
        name: Pip install

      - run: composer run-script test
        name: Test
      - if: failure()
        name: Failure output
        uses: actions/upload-artifact@v2
        with:
          name: output
          path: tests/**/*.actual

  php-stan:
    name: PHPStan ${{ matrix.php }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        php: ["8.1"]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: recursive
      - uses: ./.github/setup
        with:
          php-version: ${{ matrix.php }}
      - uses: php-actions/phpstan@v3
        with:
          level: 5
          path: app/ tests/

  test-webserver:
    needs:
      - latte
      - build
    #- php-stan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          submodules: recursive
      - name: generate local config
        run: 'echo -e "parameters:\n    # FKSDB API endpoint\n    fksdbDownloader:\n        login: \u0027$DBNAME\u0027\n        password: \u0027$DBPASS\u0027\n        url: \u0027https://db.fykos.cz/api/\u0027\n    problemManagerDownloader:\n        login: \u0027$PROBLEMNAME\u0027\n        password: \u0027$PROBLEMSSWORD\u0027\n        url: \u0027$PROBLEMURL\u0027\n\n    # game API endpoint, used for FOL/FOF live results\n    #gameApi:\n    #    login: \u0027\u0027\n    #    password: \u0027\u0027\n    #    url: \u0027\u0027\n\n    domains:\n        vyfuk.org: cs\n        fykos.cz: cs\n        fykos.org: en\n        dsef.cz: cs\n        dsef.org: en\n        fyziklani.cz: cs \n        fyziklani.org: en\n        online.fyziklani.cz: cs\n        online.fyziklani.org: en\n" > app/config/config.local.neon.example'
        env:
          DBNAME: ${{ secrets.DBNAME }}
          DBPASS: ${{ secrets.DBPASS }}
          PROBLEMNAME: ${{ secrets.PROBLEMNAME }}
          PROBLEMSSWORD: ${{ secrets.PROBLEMSSWORD }}
          PROBLEMURL: ${{ secrets.PROBLEMURL }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/tests/getter/docker
          load: true
          pull: true
          tags: webs-test-getter:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - run: chmod 777 log app/config/
      - run: docker compose up --exit-code-from webs-test
        working-directory: "${{ github.workspace }}/tests/getter/docker"
